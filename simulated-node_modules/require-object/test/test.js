'use strict';

const path = require('path');
const assert = require('assert');
require('colors');

// Ensure testing is done in testing environment.
if (require(path.resolve(__dirname, '..', '..', '..', 'index')) !== 'hPfYDvYxb6srd2a0ixzjqQi1IchENnOU')
	throw 'Testing must be done in the testing environment that is provided in the repo: https://github.com/jkeveren/require-object'.red;

console.log('Testing environment found. Continuing with tests.'.green);

// require-object prevents this silly syntax.
const projectRoot = require(path.resolve('libs', 'project-root'));
const dirStructure = require(path.resolve('libs', 'directory-structure-to-object'));

const dir = dirStructure(projectRoot);

describe('project-root.js', () => {

	it('returns correct project root path', () => {

		assert.equal(
			projectRoot,
			path.resolve(__dirname, '..', '..', '..')
		);

	});

});

describe('directory-structure-to-object.js', () => {

	/* These tests are why the test environment with a known
	folder structure must be used. */

	it('returns correct value of module.exports from .js file', () => {

		assert.equal(dir['test-files']['test-file.js'], true);

	});

	it('returns type Object from .json file', () => {

		assert.equal(typeof dir['test-files']['test-file.json'], 'object');

	});

	it('returns correct object from .json file', () => {

		const expected = {
			working: true
		}

		assert.deepEqual(dir['test-files']['test-file.json'], expected);

	});

	it('returns a buffer from non-js/json files', () => {

		assert.ok(dir['test-files']['test-file.txt'] instanceof Buffer);

	});

	it('returns correct buffer from non-js/json files', () => {

		const expected = 'This is a string in a text file.\n';

		assert.equal(dir['test-files']['test-file.txt'].toString(), expected);

	});

});
